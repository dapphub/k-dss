requires "../rules.k"

module PROOF-PIT_FILE-LINE_SUCC
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// Pit_file-Line
rule
  <k> #execute ~> CONTINUATION => #halt ~> CONTINUATION </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> .WordStack </output>
      <statusCode> _ => EVMC_SUCCESS </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c6004356000610415565b805460405260206040f35b6365fae35e8114156100885761006b6103fe565b1561007557600080fd5b6100826004356000610415565b60018155005b639c52a7f18114156100b95761009c6103fe565b156100a657600080fd5b6100b36004356000610415565b60008155005b63d9638d368114156100e4576100d26004356001610415565b80546040526001810154606052604080f35b63957aa58c8114156100fc5760025460405260206040f35b63babe8a3f8114156101145760035460405260206040f35b6336569e7781141561012c5760045460405260206040f35b6329ae811481141561017d576101406103fe565b1561014a57600080fd5b7f4c696e6500000000000000000000000000000000000000000000000000000000600435141561017b576024356003555b005b631a0b287e81141561020d576101916103fe565b1561019b57600080fd5b6101a86004356001610415565b7f73706f740000000000000000000000000000000000000000000000000000000060243514156101d85760443581555b7f6c696e6500000000000000000000000000000000000000000000000000000000602435141561020b5760443560018201555b005b635a984ded8114156103f9577f5dd6471a0000000000000000000000000000000000000000000000000000000060005260043560045233602452336044523360645260243560845260443560a45260008060c46000806004545af1151561027357600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526080600060246000806004545af115156102b657600080fd5b6000516020516020516040517f26e2748200000000000000000000000000000000000000000000000000000000600052600435600452336024526040600060446000806004545af1151561030957600080fd5b6000516020517f0dca59c1000000000000000000000000000000000000000000000000000000006000526020600060046000806004545af1151561034c57600080fd5b60005161035c6004356001610415565b8054600182015461037b6b033b2e3c9fd0803ce800000060035461042c565b84106103936b033b2e3c9fd0803ce80000008361042c565b61039d8b8a61042c565b11151660006044351315600060243512156103b88c8961042c565b6103c2868b61042c565b101560016002541415156103d557600080fd5b60008d14156103e357600080fd5b80828416178385171615156103f757600080fd5b005b600080fd5b600061040b336000610415565b5460011415905090565b600082600052816020526040600020905092915050565b6000828202905081838204146000841417151561044857600080fd5b929150505600a165627a7a723058201eb9da5259bd1926874fea8c4d65407c96984c22cd0d1baa87eeff4079f1b2b80029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c6004356000610415565b805460405260206040f35b6365fae35e8114156100885761006b6103fe565b1561007557600080fd5b6100826004356000610415565b60018155005b639c52a7f18114156100b95761009c6103fe565b156100a657600080fd5b6100b36004356000610415565b60008155005b63d9638d368114156100e4576100d26004356001610415565b80546040526001810154606052604080f35b63957aa58c8114156100fc5760025460405260206040f35b63babe8a3f8114156101145760035460405260206040f35b6336569e7781141561012c5760045460405260206040f35b6329ae811481141561017d576101406103fe565b1561014a57600080fd5b7f4c696e6500000000000000000000000000000000000000000000000000000000600435141561017b576024356003555b005b631a0b287e81141561020d576101916103fe565b1561019b57600080fd5b6101a86004356001610415565b7f73706f740000000000000000000000000000000000000000000000000000000060243514156101d85760443581555b7f6c696e6500000000000000000000000000000000000000000000000000000000602435141561020b5760443560018201555b005b635a984ded8114156103f9577f5dd6471a0000000000000000000000000000000000000000000000000000000060005260043560045233602452336044523360645260243560845260443560a45260008060c46000806004545af1151561027357600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526080600060246000806004545af115156102b657600080fd5b6000516020516020516040517f26e2748200000000000000000000000000000000000000000000000000000000600052600435600452336024526040600060446000806004545af1151561030957600080fd5b6000516020517f0dca59c1000000000000000000000000000000000000000000000000000000006000526020600060046000806004545af1151561034c57600080fd5b60005161035c6004356001610415565b8054600182015461037b6b033b2e3c9fd0803ce800000060035461042c565b84106103936b033b2e3c9fd0803ce80000008361042c565b61039d8b8a61042c565b11151660006044351315600060243512156103b88c8961042c565b6103c2868b61042c565b101560016002541415156103d557600080fd5b60008d14156103e357600080fd5b80828416178385171615156103f757600080fd5b005b600080fd5b600061040b336000610415565b5460011415905090565b600082600052816020526040600020905092915050565b6000828202905081838204146000841417151561044857600080fd5b929150505600a165627a7a723058201eb9da5259bd1926874fea8c4d65407c96984c22cd0d1baa87eeff4079f1b2b80029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("file", #bytes32(ABI_what), #uint256(ABI_data)) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> VCallDepth => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> _ => VLog </log>
        <refund> _ => VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID) _ </activeAccounts>
      <accounts>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c6004356000610415565b805460405260206040f35b6365fae35e8114156100885761006b6103fe565b1561007557600080fd5b6100826004356000610415565b60018155005b639c52a7f18114156100b95761009c6103fe565b156100a657600080fd5b6100b36004356000610415565b60008155005b63d9638d368114156100e4576100d26004356001610415565b80546040526001810154606052604080f35b63957aa58c8114156100fc5760025460405260206040f35b63babe8a3f8114156101145760035460405260206040f35b6336569e7781141561012c5760045460405260206040f35b6329ae811481141561017d576101406103fe565b1561014a57600080fd5b7f4c696e6500000000000000000000000000000000000000000000000000000000600435141561017b576024356003555b005b631a0b287e81141561020d576101916103fe565b1561019b57600080fd5b6101a86004356001610415565b7f73706f740000000000000000000000000000000000000000000000000000000060243514156101d85760443581555b7f6c696e6500000000000000000000000000000000000000000000000000000000602435141561020b5760443560018201555b005b635a984ded8114156103f9577f5dd6471a0000000000000000000000000000000000000000000000000000000060005260043560045233602452336044523360645260243560845260443560a45260008060c46000806004545af1151561027357600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526080600060246000806004545af115156102b657600080fd5b6000516020516020516040517f26e2748200000000000000000000000000000000000000000000000000000000600052600435600452336024526040600060446000806004545af1151561030957600080fd5b6000516020517f0dca59c1000000000000000000000000000000000000000000000000000000006000526020600060046000806004545af1151561034c57600080fd5b60005161035c6004356001610415565b8054600182015461037b6b033b2e3c9fd0803ce800000060035461042c565b84106103936b033b2e3c9fd0803ce80000008361042c565b61039d8b8a61042c565b11151660006044351315600060243512156103b88c8961042c565b6103c2868b61042c565b101560016002541415156103d557600080fd5b60008d14156103e357600080fd5b80828416178385171615156103f757600080fd5b005b600080fd5b600061040b336000610415565b5460011415905090565b600082600052816020526040600020905092915050565b6000828202905081838204146000841417151561044857600080fd5b929150505600a165627a7a723058201eb9da5259bd1926874fea8c4d65407c96984c22cd0d1baa87eeff4079f1b2b80029") </code>
          <storage> #Pit.wards[CALLER_ID] |-> (Can)
                          #Pit.Line |-> (Line => #if ABI_what ==Int #string2Word("Line") #then ABI_data #else Line #fi)
                          _:Map
           </storage>
          <nonce> _ </nonce>
        </account>
       ... 
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires #rangeAddress(ACCT_ID)
andBool #notPrecompileAddress(ACCT_ID)
andBool #rangeAddress(CALLER_ID)
andBool #rangeAddress(ORIGIN_ID)
andBool #rangeUInt(48, TIME)
andBool #rangeUInt(256, BAL)
andBool VCallDepth <=Int 1024
  andBool #rangeBytes(32, ABI_what)
  andBool #rangeUInt(256, ABI_data)
  andBool #rangeUInt(256, Can)
  andBool #rangeUInt(256, Line)
  andBool VGas >Int 300000
  andBool Can ==Int 1

endmodule
