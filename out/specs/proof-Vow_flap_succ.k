requires "../rules.k"

module PROOF-VOW_FLAP_SUCC
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// Vow_flap
rule
  <k> #execute ~> CONTINUATION => #halt ~> CONTINUATION </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> _ => #asByteStackInWidthaux(1 +Int Kicks, 31, 32, .WordStack) </output>
      <statusCode> _ => EVMC_SUCCESS </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c6004356000610893565b805460405260206040f35b6365fae35e8114156100885761006b61087c565b1561007557600080fd5b6100826004356000610893565b60018155005b639c52a7f18114156100b95761009c61087c565b156100a657600080fd5b6100b36004356000610893565b60008155005b6336569e778114156100d15760015460405260206040f35b63dfbf306d8114156100e95760025460405260206040f35b6370904ded8114156101015760035460405260206040f35b637f49edc48114156101255761011a6004356004610893565b805460405260206040f35b63d0adc35f81141561013d5760055460405260206040f35b6349dd5bb28114156101555760065460405260206040f35b632a1d2b3c81141561016d5760075460405260206040f35b6364bd70138114156101855760085460405260206040f35b63c349d36281141561019d5760095460405260206040f35b6368110b2f8114156101b557600a5460405260206040f35b631b8e8cfa8114156101cd57600b5460405260206040f35b63143e55e08114156101e3574260405260206040f35b6329ae81148114156102c7576101f761087c565b1561020157600080fd5b7f77616974000000000000000000000000000000000000000000000000000000006004351415610232576024356008555b7f73756d70000000000000000000000000000000000000000000000000000000006004351415610263576024356009555b7f62756d7000000000000000000000000000000000000000000000000000000000600435141561029457602435600a555b7f68756d700000000000000000000000000000000000000000000000000000000060043514156102c557602435600b555b005b63d4e8be8381141561037a576102db61087c565b156102e557600080fd5b7f666c6170000000000000000000000000000000000000000000000000000000006004351415610316576024356002555b7f666c6f70000000000000000000000000000000000000000000000000000000006004351415610347576024356003555b7f76617400000000000000000000000000000000000000000000000000000000006004351415610378576024356001555b005b6305db45388114156103975761038e6107f3565b60405260206040f35b6307a832b48114156103b4576103ab610813565b60405260206040f35b63697efb78811415610406576103c861087c565b156103d257600080fd5b6103e46103dd6107ae565b6004610893565b6103f160043582546108aa565b81556104016004356005546108aa565b600555005b6335aee16f8114156104665761041a6107ae565b6104286008546004356108aa565b111561043357600080fd5b6104406004356004610893565b805461044e816005546108cf565b60055561045d816006546108aa565b60065560008255005b63f37ac61c8114156104f45760065461048d6b033b2e3c9fd0803ce80000006004356108f4565b600081121561049b57600080fd5b6104a7600435836108cf565b6006557f990a5f630000000000000000000000000000000000000000000000000000000060005230600452306024528060445260008060646000806001545af115156104f257600080fd5b005b632506855a8114156105825760075461051b6b033b2e3c9fd0803ce80000006004356108f4565b600081121561052957600080fd5b610535600435836108cf565b6007557f990a5f630000000000000000000000000000000000000000000000000000000060005230600452306024528060445260008060646000806001545af1151561058057600080fd5b005b63bbbb0d7b81141561064257600654600954808210156105a157600080fd5b60006105ab610813565b1415156105b757600080fd5b6105c181836108cf565b6006556105d0816007546108aa565b6007557fb7e9cd2400000000000000000000000000000000000000000000000000000000600052306004527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602452806044526020604060646000806003545af1151561063c57600080fd5b60206040f35b630e01198b8114156107a957600a5461066d600b54610668836106636107f3565b6108aa565b6108aa565b610675610813565b101561068057600080fd5b600060065414151561069157600080fd5b7ff4b9fa75000000000000000000000000000000000000000000000000000000006000526020604060046000806002545af115156106ce57600080fd5b6040517fa3b22fc4000000000000000000000000000000000000000000000000000000006000526002546004526000806024600080855af1151561071157600080fd5b7fb7e9cd240000000000000000000000000000000000000000000000000000000060005260006004528160245260006044526020604060646000806002545af1151561075c57600080fd5b6040517fdc4d20fa000000000000000000000000000000000000000000000000000000006000526002546004526000806024600080865af1151561079f57600080fd5b8060405260206040f35b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156107eb57600080fd5b600051905090565b600061080e6007546108096006546005546108aa565b6108aa565b905090565b60007ff53e4e6900000000000000000000000000000000000000000000000000000000600052306004526020600060246000806001545af1151561085657600080fd5b600051600081101561086757600080fd5b6b033b2e3c9fd0803ce8000000810491505090565b6000610889336000610893565b5460011415905090565b600082600052816020526040600020905092915050565b6000828201905060008311156108c95781811115156108c857600080fd5b5b92915050565b6000828203905060008311156108ee5781811015156108ed57600080fd5b5b92915050565b60008282029050600083141515610916578183820414151561091557600080fd5b5b929150505600a165627a7a72305820634b6770670cb607a0c795f1fd8c9dad7aa6578b658629bf830a64076a4ac2580029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c6004356000610893565b805460405260206040f35b6365fae35e8114156100885761006b61087c565b1561007557600080fd5b6100826004356000610893565b60018155005b639c52a7f18114156100b95761009c61087c565b156100a657600080fd5b6100b36004356000610893565b60008155005b6336569e778114156100d15760015460405260206040f35b63dfbf306d8114156100e95760025460405260206040f35b6370904ded8114156101015760035460405260206040f35b637f49edc48114156101255761011a6004356004610893565b805460405260206040f35b63d0adc35f81141561013d5760055460405260206040f35b6349dd5bb28114156101555760065460405260206040f35b632a1d2b3c81141561016d5760075460405260206040f35b6364bd70138114156101855760085460405260206040f35b63c349d36281141561019d5760095460405260206040f35b6368110b2f8114156101b557600a5460405260206040f35b631b8e8cfa8114156101cd57600b5460405260206040f35b63143e55e08114156101e3574260405260206040f35b6329ae81148114156102c7576101f761087c565b1561020157600080fd5b7f77616974000000000000000000000000000000000000000000000000000000006004351415610232576024356008555b7f73756d70000000000000000000000000000000000000000000000000000000006004351415610263576024356009555b7f62756d7000000000000000000000000000000000000000000000000000000000600435141561029457602435600a555b7f68756d700000000000000000000000000000000000000000000000000000000060043514156102c557602435600b555b005b63d4e8be8381141561037a576102db61087c565b156102e557600080fd5b7f666c6170000000000000000000000000000000000000000000000000000000006004351415610316576024356002555b7f666c6f70000000000000000000000000000000000000000000000000000000006004351415610347576024356003555b7f76617400000000000000000000000000000000000000000000000000000000006004351415610378576024356001555b005b6305db45388114156103975761038e6107f3565b60405260206040f35b6307a832b48114156103b4576103ab610813565b60405260206040f35b63697efb78811415610406576103c861087c565b156103d257600080fd5b6103e46103dd6107ae565b6004610893565b6103f160043582546108aa565b81556104016004356005546108aa565b600555005b6335aee16f8114156104665761041a6107ae565b6104286008546004356108aa565b111561043357600080fd5b6104406004356004610893565b805461044e816005546108cf565b60055561045d816006546108aa565b60065560008255005b63f37ac61c8114156104f45760065461048d6b033b2e3c9fd0803ce80000006004356108f4565b600081121561049b57600080fd5b6104a7600435836108cf565b6006557f990a5f630000000000000000000000000000000000000000000000000000000060005230600452306024528060445260008060646000806001545af115156104f257600080fd5b005b632506855a8114156105825760075461051b6b033b2e3c9fd0803ce80000006004356108f4565b600081121561052957600080fd5b610535600435836108cf565b6007557f990a5f630000000000000000000000000000000000000000000000000000000060005230600452306024528060445260008060646000806001545af1151561058057600080fd5b005b63bbbb0d7b81141561064257600654600954808210156105a157600080fd5b60006105ab610813565b1415156105b757600080fd5b6105c181836108cf565b6006556105d0816007546108aa565b6007557fb7e9cd2400000000000000000000000000000000000000000000000000000000600052306004527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602452806044526020604060646000806003545af1151561063c57600080fd5b60206040f35b630e01198b8114156107a957600a5461066d600b54610668836106636107f3565b6108aa565b6108aa565b610675610813565b101561068057600080fd5b600060065414151561069157600080fd5b7ff4b9fa75000000000000000000000000000000000000000000000000000000006000526020604060046000806002545af115156106ce57600080fd5b6040517fa3b22fc4000000000000000000000000000000000000000000000000000000006000526002546004526000806024600080855af1151561071157600080fd5b7fb7e9cd240000000000000000000000000000000000000000000000000000000060005260006004528160245260006044526020604060646000806002545af1151561075c57600080fd5b6040517fdc4d20fa000000000000000000000000000000000000000000000000000000006000526002546004526000806024600080865af1151561079f57600080fd5b8060405260206040f35b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156107eb57600080fd5b600051905090565b600061080e6007546108096006546005546108aa565b6108aa565b905090565b60007ff53e4e6900000000000000000000000000000000000000000000000000000000600052306004526020600060246000806001545af1151561085657600080fd5b600051600081101561086757600080fd5b6b033b2e3c9fd0803ce8000000810491505090565b6000610889336000610893565b5460011415905090565b600082600052816020526040600020905092915050565b6000828201905060008311156108c95781811115156108c857600080fd5b5b92915050565b6000828203905060008311156108ee5781811015156108ed57600080fd5b5b92915050565b60008282029050600083141515610916578183820414151561091557600080fd5b5b929150505600a165627a7a72305820634b6770670cb607a0c795f1fd8c9dad7aa6578b658629bf830a64076a4ac2580029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("flap", .TypedArgs) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> VCallDepth => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> _ => VLog </log>
        <refund> _ => VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID)
      SetItem(DaiMove)
      SetItem(Cow)
      SetItem(Vat) _ </activeAccounts>
      <accounts>
        <account>
          <acctID> DaiMove </acctID>
          <balance> DaiMove_balance </balance>
          <code> #parseByteStack("0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806336569e77146100725780634538c4eb146100c9578063a3b22fc414610144578063bb35783b14610187578063dc4d20fa146101f4575b600080fd5b34801561007e57600080fd5b50610087610237565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100d557600080fd5b5061012a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025c565b604051808215151515815260200191505060405180910390f35b34801561015057600080fd5b50610185600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061028b565b005b34801561019357600080fd5b506101f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610322565b005b34801561020057600080fd5b50610235600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610501565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b3373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806103e25750600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15156103ed57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166378f194708473ffffffffffffffffffffffffffffffffffffffff166001028473ffffffffffffffffffffffffffffffffffffffff166001026104746b033b2e3c9fd0803ce800000086610599565b6040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180846000191660001916815260200183600019166000191681526020018281526020019350505050600060405180830381600087803b1580156104e457600080fd5b505af11580156104f8573d6000803e3d6000fd5b50505050505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008183029050600081121515156105b057600080fd5b60008214806105c957508282828115156105c657fe5b04145b15156105d457600080fd5b929150505600a165627a7a72305820a8c6c0efa767fc7667f5f6120a252649a9efeaf0cdc501dc34048040e2bcecd30029") </code>
          <storage> #DaiMove.vat |-> (Vat_move)
                      #DaiMove.can[ACCT_ID] |-> (Can => Can)
                      _:Map </storage>
          <nonce> _ </nonce>
        </account>
        <account>
          <acctID> Cow </acctID>
          <balance> Cow_balance </balance>
          <code> #parseByteStack("0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063143e55e0146100b45780634423c5f1146100ef5780634b43ed12146101cb5780634e8b1dd51461020c5780637bd2bea7146102475780637d780d821461029e578063b7e9cd24146102c9578063c959c42b14610334578063cfc4af5514610361578063cfdd33021461039c578063f4b9fa75146103c7575b600080fd5b3480156100c057600080fd5b506100c961041e565b604051808265ffffffffffff1665ffffffffffff16815260200191505060405180910390f35b3480156100fb57600080fd5b5061011a60048036038101908080359060200190929190505050610426565b604051808781526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018465ffffffffffff1665ffffffffffff1681526020018365ffffffffffff1665ffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001965050505050505060405180910390f35b3480156101d757600080fd5b5061020a6004803603810190808035906020019092919080359060200190929190803590602001909291905050506104c6565b005b34801561021857600080fd5b50610221610aaa565b604051808265ffffffffffff1665ffffffffffff16815260200191505060405180910390f35b34801561025357600080fd5b5061025c610ac2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102aa57600080fd5b506102b3610ae8565b6040518082815260200191505060405180910390f35b3480156102d557600080fd5b5061031e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610aee565b6040518082815260200191505060405180910390f35b34801561034057600080fd5b5061035f60048036038101908080359060200190929190505050610e02565b005b34801561036d57600080fd5b50610376611182565b604051808265ffffffffffff1665ffffffffffff16815260200191505060405180910390f35b3480156103a857600080fd5b506103b161119a565b6040518082815260200191505060405180910390f35b3480156103d357600080fd5b506103dc6111a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600042905090565b60006020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160149054906101000a900465ffffffffffff169080600201601a9054906101000a900465ffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a4600080600087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156105cc57600080fd5b6105d461041e565b65ffffffffffff1660008087815260200190815260200160002060020160149054906101000a900465ffffffffffff1665ffffffffffff1611806106475750600080600087815260200190815260200160002060020160149054906101000a900465ffffffffffff1665ffffffffffff16145b151561065257600080fd5b61065a61041e565b65ffffffffffff16600080878152602001908152602001600020600201601a9054906101000a900465ffffffffffff1665ffffffffffff1611151561069e57600080fd5b60008086815260200190815260200160002060010154841415156106c157600080fd5b60008086815260200190815260200160002060000154831115156106e457600080fd5b610705600354600080888152602001908152602001600020600001546111c6565b61071b846b033b2e3c9fd0803ce80000006111c6565b1215151561072857600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b3360008089815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000808a8152602001908152602001600020600001546040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561086b57600080fd5b505af115801561087f573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b3360008089815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000808a81526020019081526020016000206000015487036040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156109c857600080fd5b505af11580156109dc573d6000803e3d6000fd5b505050503360008087815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260008087815260200190815260200160002060000181905550600460009054906101000a900465ffffffffffff16610a6b61041e565b0160008087815260200190815260200160002060020160146101000a81548165ffffffffffff021916908365ffffffffffff1602179055505050505050565b600460009054906101000a900465ffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6000806005600081546001019190508190559050826000808381526020019081526020016000206000018190555083600080838152602001908152602001600020600101819055503360008083815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460069054906101000a900465ffffffffffff16610ba761041e565b01600080838152602001908152602001600020600201601a6101000a81548165ffffffffffff021916908365ffffffffffff1602179055508460008083815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b3330876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610d2c57600080fd5b505af1158015610d40573d6000803e3d6000fd5b50505050807fefa52d9342a199cb30efd2692463f2c2bef63cd7186b50382d4fb94ad207880e858588600080878152602001908152602001600020600201601a9054906101000a900465ffffffffffff16604051808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018265ffffffffffff1665ffffffffffff16815260200194505050505060405180910390a2809150509392505050565b60008060043591506024359050806000191682600019163373ffffffffffffffffffffffffffffffffffffffff166000357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19163460003660405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a4610eb561041e565b65ffffffffffff1660008085815260200190815260200160002060020160149054906101000a900465ffffffffffff1665ffffffffffff16108015610f2a5750600080600085815260200190815260200160002060020160149054906101000a900465ffffffffffff1665ffffffffffff1614155b80610f725750610f3861041e565b65ffffffffffff16600080858152602001908152602001600020600201601a9054906101000a900465ffffffffffff1665ffffffffffff16105b1515610f7d57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb35783b3060008087815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600080888152602001908152602001600020600101546040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1580156110c057600080fd5b505af11580156110d4573d6000803e3d6000fd5b5050505060008084815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549065ffffffffffff021916905560028201601a6101000a81549065ffffffffffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050505050565b600460069054906101000a900465ffffffffffff1681565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008183029050600081121515156111dd57600080fd5b60008214806111f657508282828115156111f357fe5b04145b151561120157600080fd5b929150505600a165627a7a723058205f0a8042269a658c78337692889155880b6766db1cc1d7e8adba02b6acd0b0d50029") </code>
          <storage> #Flapper.dai |-> (DaiMove)
                      #Flapper.ttl_tau |-> (#WordPackUInt48UInt48(Ttl, Tau))
                      #Flapper.kicks |-> (Kicks => 1 +Int Kicks)
                      #Flapper.bids[1 +Int Kicks].bid |-> (Bid_was => 0)
                      #Flapper.bids[1 +Int Kicks].lot |-> (Lot_was => Bump)
                      #Flapper.bids[1 +Int Kicks].guy_tic_end |-> (#WordPackAddrUInt48UInt48(Guy_was, Tic_was, End_was) => #WordPackAddrUInt48UInt48(ACCT_ID, Tic_was, TIME +Int Tau))
                      #Flapper.bids[1 +Int Kicks].gal |-> (Gal_was => ACCT_ID)
                      _:Map </storage>
          <nonce> _ </nonce>
        </account>
        <account>
          <acctID> Vat </acctID>
          <balance> Vat_balance </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c600435600061067e565b805460405260206040f35b6365fae35e8114156100885761006b610667565b1561007557600080fd5b610082600435600061067e565b60018155005b639c52a7f18114156100b95761009c610667565b156100a657600080fd5b6100b3600435600061067e565b60008155005b63d9638d368114156100f5576100d2600435600161067e565b805460405260018101546060526002810154608052600381015460a05260806040f35b6326e27482811415610123576101116024356004356002610695565b80546040526001810154606052604080f35b63c091268381141561014a5761013f6024356004356003610695565b805460405260206040f35b63f53e4e6981141561016e57610163600435600461067e565b805460405260206040f35b63a60f1d3e81141561019257610187600435600561067e565b805460405260206040f35b630dca59c18114156101aa5760065460405260206040f35b632d61a3558114156101c25760075460405260206040f35b633b663195811415610233576101d6610667565b156101e057600080fd5b6101ed600435600161067e565b600081541415156101fd57600080fd5b6000600182015414151561021057600080fd5b6b033b2e3c9fd0803ce800000081556b033b2e3c9fd0803ce80000006001820155005b6378f1947081141561028b57610247610667565b1561025157600080fd5b61025e600435600461067e565b61026b60443582546106f6565b815561027a602435600461067e565b61028760443582546106b9565b8155005b6342066cbb8114156102ca5761029f610667565b156102a957600080fd5b6102b96024356004356003610695565b6102c660443582546106b9565b8155005b63a6e41821811415610328576102de610667565b156102e857600080fd5b6102f86024356004356003610695565b61030560643582546106f6565b81556103176044356004356003610695565b61032460643582546106b9565b8155005b635dd6471a8114156104165761033c610667565b1561034657600080fd5b6103566024356004356002610695565b61036360843582546106b9565b815561037560a43560018301546106b9565b6001820155610387600435600161067e565b61039760843560028301546106b9565b60028201556103ac60a43560038301546106b9565b60038201556103be6084358254610733565b6103ce6044356004356003610695565b6103d98282546106f6565b81556103eb60a4356001850154610733565b6103f8606435600461067e565b6104038282546106b9565b8155610411826006546106b9565b600655005b633690ae4c8114156105045761042a610667565b1561043457600080fd5b6104446024356004356002610695565b61045160843582546106b9565b815561046360a43560018301546106b9565b6001820155610475600435600161067e565b61048560843560028301546106b9565b600282015561049a60a43560038301546106b9565b60038201556104ac6084358254610733565b6104bc6044356004356003610695565b6104c78282546106f6565b81556104d960a4356001850154610733565b6104e6606435600561067e565b6104f18282546106f6565b81556104ff826007546106f6565b600755005b63990a5f6381141561057e57610518610667565b1561052257600080fd5b61052f600435600561067e565b61053c60443582546106f6565b815561054b602435600461067e565b61055860443582546106f6565b81556105686044356007546106f6565b6007556105796044356006546106f6565b600655005b63e6a6a64d8114156105f957610592610667565b1561059c57600080fd5b6105a9600435600161067e565b6105b960443560018301546106b9565b60018201556105ce6044356003830154610733565b6105db602435600461067e565b6105e68282546106b9565b81556105f4826006546106b9565b600655005b6309b7a0b58114156106625761060d610667565b1561061757600080fd5b610624600435600161067e565b61063160443582546106b9565b81556106436044356002830154610733565b6106536024356004356003610695565b61065e8282546106f6565b8155005b600080fd5b600061067433600061067e565b5460011415905090565b600082600052816020526040600020905092915050565b60008360005282602052816040526040602020602052604060002090509392505050565b6000828201905060008313156106d85781811115156106d757600080fd5b5b60008312156106f05781811015156106ef57600080fd5b5b92915050565b60008282039050600083121561071557818111151561071457600080fd5b5b600083131561072d57818110151561072c57600080fd5b5b92915050565b60008282029050600082121561074857600080fd5b600083141515610763578183820514151561076257600080fd5b5b929150505600a165627a7a723058201fcd622e26e92262e34259d46a2cb321a6b6f16f239ee5bf5a42f6e2b76c16ac0029") </code>
          <storage> #Vat.dai[ACCT_ID] |-> (Dai => Dai -Int #Ray *Int Bump)
                      _:Map </storage>
          <nonce> _ </nonce>
        </account>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c6004356000610893565b805460405260206040f35b6365fae35e8114156100885761006b61087c565b1561007557600080fd5b6100826004356000610893565b60018155005b639c52a7f18114156100b95761009c61087c565b156100a657600080fd5b6100b36004356000610893565b60008155005b6336569e778114156100d15760015460405260206040f35b63dfbf306d8114156100e95760025460405260206040f35b6370904ded8114156101015760035460405260206040f35b637f49edc48114156101255761011a6004356004610893565b805460405260206040f35b63d0adc35f81141561013d5760055460405260206040f35b6349dd5bb28114156101555760065460405260206040f35b632a1d2b3c81141561016d5760075460405260206040f35b6364bd70138114156101855760085460405260206040f35b63c349d36281141561019d5760095460405260206040f35b6368110b2f8114156101b557600a5460405260206040f35b631b8e8cfa8114156101cd57600b5460405260206040f35b63143e55e08114156101e3574260405260206040f35b6329ae81148114156102c7576101f761087c565b1561020157600080fd5b7f77616974000000000000000000000000000000000000000000000000000000006004351415610232576024356008555b7f73756d70000000000000000000000000000000000000000000000000000000006004351415610263576024356009555b7f62756d7000000000000000000000000000000000000000000000000000000000600435141561029457602435600a555b7f68756d700000000000000000000000000000000000000000000000000000000060043514156102c557602435600b555b005b63d4e8be8381141561037a576102db61087c565b156102e557600080fd5b7f666c6170000000000000000000000000000000000000000000000000000000006004351415610316576024356002555b7f666c6f70000000000000000000000000000000000000000000000000000000006004351415610347576024356003555b7f76617400000000000000000000000000000000000000000000000000000000006004351415610378576024356001555b005b6305db45388114156103975761038e6107f3565b60405260206040f35b6307a832b48114156103b4576103ab610813565b60405260206040f35b63697efb78811415610406576103c861087c565b156103d257600080fd5b6103e46103dd6107ae565b6004610893565b6103f160043582546108aa565b81556104016004356005546108aa565b600555005b6335aee16f8114156104665761041a6107ae565b6104286008546004356108aa565b111561043357600080fd5b6104406004356004610893565b805461044e816005546108cf565b60055561045d816006546108aa565b60065560008255005b63f37ac61c8114156104f45760065461048d6b033b2e3c9fd0803ce80000006004356108f4565b600081121561049b57600080fd5b6104a7600435836108cf565b6006557f990a5f630000000000000000000000000000000000000000000000000000000060005230600452306024528060445260008060646000806001545af115156104f257600080fd5b005b632506855a8114156105825760075461051b6b033b2e3c9fd0803ce80000006004356108f4565b600081121561052957600080fd5b610535600435836108cf565b6007557f990a5f630000000000000000000000000000000000000000000000000000000060005230600452306024528060445260008060646000806001545af1151561058057600080fd5b005b63bbbb0d7b81141561064257600654600954808210156105a157600080fd5b60006105ab610813565b1415156105b757600080fd5b6105c181836108cf565b6006556105d0816007546108aa565b6007557fb7e9cd2400000000000000000000000000000000000000000000000000000000600052306004527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602452806044526020604060646000806003545af1151561063c57600080fd5b60206040f35b630e01198b8114156107a957600a5461066d600b54610668836106636107f3565b6108aa565b6108aa565b610675610813565b101561068057600080fd5b600060065414151561069157600080fd5b7ff4b9fa75000000000000000000000000000000000000000000000000000000006000526020604060046000806002545af115156106ce57600080fd5b6040517fa3b22fc4000000000000000000000000000000000000000000000000000000006000526002546004526000806024600080855af1151561071157600080fd5b7fb7e9cd240000000000000000000000000000000000000000000000000000000060005260006004528160245260006044526020604060646000806002545af1151561075c57600080fd5b6040517fdc4d20fa000000000000000000000000000000000000000000000000000000006000526002546004526000806024600080865af1151561079f57600080fd5b8060405260206040f35b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156107eb57600080fd5b600051905090565b600061080e6007546108096006546005546108aa565b6108aa565b905090565b60007ff53e4e6900000000000000000000000000000000000000000000000000000000600052306004526020600060246000806001545af1151561085657600080fd5b600051600081101561086757600080fd5b6b033b2e3c9fd0803ce8000000810491505090565b6000610889336000610893565b5460011415905090565b600082600052816020526040600020905092915050565b6000828201905060008311156108c95781811115156108c857600080fd5b5b92915050565b6000828203905060008311156108ee5781811015156108ed57600080fd5b5b92915050565b60008282029050600083141515610916578183820414151561091557600080fd5b5b929150505600a165627a7a72305820634b6770670cb607a0c795f1fd8c9dad7aa6578b658629bf830a64076a4ac2580029") </code>
          <storage> #Vow.cow |-> (Cow)
                          #Vow.vat |-> (Vat)
                          #Vow.bump |-> (Bump)
                          #Vow.hump |-> (Hump)
                          #Vow.Sin |-> (Sin)
                          #Vow.Woe |-> (Woe)
                          #Vow.Ash |-> (Ash)
                          _:Map
           </storage>
          <nonce> _ </nonce>
        </account>
       ... 
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires #rangeAddress(ACCT_ID)
andBool #notPrecompileAddress(ACCT_ID)
andBool #rangeAddress(CALLER_ID)
andBool #rangeAddress(ORIGIN_ID)
andBool #rangeUInt(48, TIME)
andBool #rangeUInt(256, BAL)
andBool VCallDepth <=Int 1024
  andBool #rangeAddress(Cow)
  andBool #rangeAddress(Vat)
  andBool #rangeAddress(Vat_move)
  andBool #rangeUInt(256, Bump)
  andBool #rangeUInt(256, Hump)
  andBool #rangeUInt(256, Woe)
  andBool #rangeUInt(256, Ash)
  andBool #rangeAddress(DaiMove)
  andBool #rangeUInt(256, Can)
  andBool #rangeUInt(256, Bid_was)
  andBool #rangeUInt(256, Lot_was)
  andBool #rangeAddress(Guy_was)
  andBool #rangeUInt(48, Tic_was)
  andBool #rangeUInt(48, End_was)
  andBool #rangeUInt(256, Gal_was)
  andBool #rangeUInt(48, Ttl)
  andBool #rangeUInt(48, Tau)
  andBool #rangeUInt(256, Kicks)
  andBool #rangeUInt(256, Dai)
  andBool #rangeUInt(256, DaiMove_balance)
  andBool #rangeUInt(256, Cow_balance)
  andBool #rangeUInt(256, Vat_balance)
  andBool #notPrecompileAddress(Cow)
  andBool ACCT_ID =/=Int Cow
  andBool #notPrecompileAddress(Vat)
  andBool ACCT_ID =/=Int Vat
  andBool #notPrecompileAddress(Vat_move)
  andBool ACCT_ID =/=Int Vat_move
  andBool #notPrecompileAddress(DaiMove)
  andBool ACCT_ID =/=Int DaiMove
  andBool #notPrecompileAddress(Guy_was)
  andBool ACCT_ID =/=Int Guy_was
  andBool Vat ==Int Vat_move
  andBool 1 +Int Kicks <=Int maxUInt256
  andBool TIME +Int Tau <=Int maxUInt48
  andBool VGas >Int 300000
  andBool Dai /Int #Ray >=Int (((Sin +Int Woe) +Int Ash) +Int Bump) +Int Hump
  andBool Woe ==Int 0
  andBool VCallDepth <Int 1023
  andBool #rangeUInt(256, Sin +Int Woe)
  andBool #rangeUInt(256, (Sin +Int Woe) +Int Ash)
  andBool #rangeUInt(256, ((Sin +Int Woe) +Int Ash) +Int Bump)
  andBool #rangeUInt(256, (((Sin +Int Woe) +Int Ash) +Int Bump) +Int Hump)

endmodule
