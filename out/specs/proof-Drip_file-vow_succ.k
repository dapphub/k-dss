requires "../rules.k"

module PROOF-DRIP_FILE-VOW_SUCC
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// Drip_file-vow
rule
  <k> #execute ~> CONTINUATION => #halt ~> CONTINUATION </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> .WordStack </output>
      <statusCode> _ => EVMC_SUCCESS </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c6004356000610442565b805460405260206040f35b6365fae35e8114156100885761006b61042b565b1561007557600080fd5b6100826004356000610442565b60018155005b639c52a7f18114156100b95761009c61042b565b156100a657600080fd5b6100b36004356000610442565b60008155005b63d9638d368114156100e4576100d26004356001610442565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b63143e55e0811415610142574260405260206040f35b633b66319581141561019b5761015661042b565b1561016057600080fd5b61016d6004356001610442565b6000815414151561017d57600080fd5b6b033b2e3c9fd0803ce800000081556101946103be565b6001820155005b631a0b287e811415610211576101af61042b565b156101b957600080fd5b6101c66004356001610442565b6101ce6103be565b60018201541415156101df57600080fd5b7f7461780000000000000000000000000000000000000000000000000000000000602435141561020f5760443581555b005b6329ae81148114156102625761022561042b565b1561022f57600080fd5b7f7265706f000000000000000000000000000000000000000000000000000000006004351415610260576024356004555b005b63e9b674b98114156102b35761027661042b565b1561028057600080fd5b7f766f77000000000000000000000000000000000000000000000000000000000060043514156102b1576024356003555b005b6344e2a5a88114156103b9576102cc6004356001610442565b6102d46103be565b81546001830154808310156102e857600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af1151561032b57600080fd5b6020516b033b2e3c9fd0803ce8000000610365826103608461035b85888b036103568b600454610459565b6104ac565b610473565b610403565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af115156103b157600080fd5b856001880155005b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156103fb57600080fd5b600051905090565b60008082121561041257600080fd5b600083121561042057600080fd5b828203905092915050565b6000610438336000610442565b5460011415905090565b600082600052816020526040600020905092915050565b600082820190508181101561046d57600080fd5b92915050565b60008282029050600083141515610495578183820414151561049457600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b600081600081146105545760028406600081146104cb578392506104cf565b8592505b50600285046002850494505b841561054e57838402848582041415156104f457600080fd5b8181018181101561050457600080fd5b8781049550600287061561054157858502858782041415871515161561052957600080fd5b8381018181101561053957600080fd5b898104965050505b50506002850494506104db565b5061056c565b8360008114610566576000925061056a565b8592505b505b5093925050505600a165627a7a72305820a26b9971576e7e26ffabf75d6848b80e86708025a86877abf704b1886b57b5da0029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c6004356000610442565b805460405260206040f35b6365fae35e8114156100885761006b61042b565b1561007557600080fd5b6100826004356000610442565b60018155005b639c52a7f18114156100b95761009c61042b565b156100a657600080fd5b6100b36004356000610442565b60008155005b63d9638d368114156100e4576100d26004356001610442565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b63143e55e0811415610142574260405260206040f35b633b66319581141561019b5761015661042b565b1561016057600080fd5b61016d6004356001610442565b6000815414151561017d57600080fd5b6b033b2e3c9fd0803ce800000081556101946103be565b6001820155005b631a0b287e811415610211576101af61042b565b156101b957600080fd5b6101c66004356001610442565b6101ce6103be565b60018201541415156101df57600080fd5b7f7461780000000000000000000000000000000000000000000000000000000000602435141561020f5760443581555b005b6329ae81148114156102625761022561042b565b1561022f57600080fd5b7f7265706f000000000000000000000000000000000000000000000000000000006004351415610260576024356004555b005b63e9b674b98114156102b35761027661042b565b1561028057600080fd5b7f766f77000000000000000000000000000000000000000000000000000000000060043514156102b1576024356003555b005b6344e2a5a88114156103b9576102cc6004356001610442565b6102d46103be565b81546001830154808310156102e857600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af1151561032b57600080fd5b6020516b033b2e3c9fd0803ce8000000610365826103608461035b85888b036103568b600454610459565b6104ac565b610473565b610403565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af115156103b157600080fd5b856001880155005b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156103fb57600080fd5b600051905090565b60008082121561041257600080fd5b600083121561042057600080fd5b828203905092915050565b6000610438336000610442565b5460011415905090565b600082600052816020526040600020905092915050565b600082820190508181101561046d57600080fd5b92915050565b60008282029050600083141515610495578183820414151561049457600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b600081600081146105545760028406600081146104cb578392506104cf565b8592505b50600285046002850494505b841561054e57838402848582041415156104f457600080fd5b8181018181101561050457600080fd5b8781049550600287061561054157858502858782041415871515161561052957600080fd5b8381018181101561053957600080fd5b898104965050505b50506002850494506104db565b5061056c565b8360008114610566576000925061056a565b8592505b505b5093925050505600a165627a7a72305820a26b9971576e7e26ffabf75d6848b80e86708025a86877abf704b1886b57b5da0029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("file", #bytes32(ABI_what), #bytes32(ABI_data)) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> VCallDepth => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> _ => VLog </log>
        <refund> _ => VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID) _ </activeAccounts>
      <accounts>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c01000000000000000000000000000000000000000000000000000000006000350463bf353dbb8114156100575761004c6004356000610442565b805460405260206040f35b6365fae35e8114156100885761006b61042b565b1561007557600080fd5b6100826004356000610442565b60018155005b639c52a7f18114156100b95761009c61042b565b156100a657600080fd5b6100b36004356000610442565b60008155005b63d9638d368114156100e4576100d26004356001610442565b80546040526001810154606052604080f35b6336569e778114156100fc5760025460405260206040f35b63626cb3c58114156101145760035460405260206040f35b6356ff312281141561012c5760045460405260206040f35b63143e55e0811415610142574260405260206040f35b633b66319581141561019b5761015661042b565b1561016057600080fd5b61016d6004356001610442565b6000815414151561017d57600080fd5b6b033b2e3c9fd0803ce800000081556101946103be565b6001820155005b631a0b287e811415610211576101af61042b565b156101b957600080fd5b6101c66004356001610442565b6101ce6103be565b60018201541415156101df57600080fd5b7f7461780000000000000000000000000000000000000000000000000000000000602435141561020f5760443581555b005b6329ae81148114156102625761022561042b565b1561022f57600080fd5b7f7265706f000000000000000000000000000000000000000000000000000000006004351415610260576024356004555b005b63e9b674b98114156102b35761027661042b565b1561028057600080fd5b7f766f77000000000000000000000000000000000000000000000000000000000060043514156102b1576024356003555b005b6344e2a5a88114156103b9576102cc6004356001610442565b6102d46103be565b81546001830154808310156102e857600080fd5b7fd9638d36000000000000000000000000000000000000000000000000000000006000526004356004526040600060246000806002545af1151561032b57600080fd5b6020516b033b2e3c9fd0803ce8000000610365826103608461035b85888b036103568b600454610459565b6104ac565b610473565b610403565b7fe6a6a64d000000000000000000000000000000000000000000000000000000006000526004356004526003546024528060445260008060646000806002545af115156103b157600080fd5b856001880155005b600080fd5b60007f143e55e000000000000000000000000000000000000000000000000000000000600052602060006004600080305af115156103fb57600080fd5b600051905090565b60008082121561041257600080fd5b600083121561042057600080fd5b828203905092915050565b6000610438336000610442565b5460011415905090565b600082600052816020526040600020905092915050565b600082820190508181101561046d57600080fd5b92915050565b60008282029050600083141515610495578183820414151561049457600080fd5b5b6b033b2e3c9fd0803ce80000008104905092915050565b600081600081146105545760028406600081146104cb578392506104cf565b8592505b50600285046002850494505b841561054e57838402848582041415156104f457600080fd5b8181018181101561050457600080fd5b8781049550600287061561054157858502858782041415871515161561052957600080fd5b8381018181101561053957600080fd5b898104965050505b50506002850494506104db565b5061056c565b8360008114610566576000925061056a565b8592505b505b5093925050505600a165627a7a72305820a26b9971576e7e26ffabf75d6848b80e86708025a86877abf704b1886b57b5da0029") </code>
          <storage> #Drip.wards[CALLER_ID] |-> (Can)
                          #Drip.vow |-> (Vow => (#if ABI_what ==Int #string2Word("vow") #then ABI_data #else Vow #fi))
                          _:Map
           </storage>
          <nonce> _ </nonce>
        </account>
       ... 
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires #rangeAddress(ACCT_ID)
andBool #notPrecompileAddress(ACCT_ID)
andBool #rangeAddress(CALLER_ID)
andBool #rangeAddress(ORIGIN_ID)
andBool #rangeUInt(48, TIME)
andBool #rangeUInt(256, BAL)
andBool VCallDepth <=Int 1024
  andBool #rangeBytes(32, ABI_what)
  andBool #rangeBytes(32, ABI_data)
  andBool #rangeUInt(256, Can)
  andBool #rangeBytes(32, Vow)
  andBool VGas >Int 300000
  andBool Can ==Int 1

endmodule
