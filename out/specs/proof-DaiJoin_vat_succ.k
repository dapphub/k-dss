requires "../rules.k"

module PROOF-DAIJOIN_VAT_SUCC
  imports ETHEREUM-SIMULATION
  imports EVM
  imports RULES

// DaiJoin_vat
rule
  <k> #execute ~> CONTINUATION => #halt ~> CONTINUATION </k>
  <exit-code> 1 </exit-code>
  <mode> NORMAL </mode>
  <schedule> BYZANTIUM </schedule>
  <analysis> .Map </analysis>
  <ethereum>
    <evm>
      <output> _ => #asByteStackInWidthaux(Vat, 31, 32, .WordStack) </output>
      <statusCode> _ => EVMC_SUCCESS </statusCode>
      <callStack> VCallStack </callStack>
      <interimStates> _ </interimStates>
      <touchedAccounts> _ => _ </touchedAccounts>
      <callState>
        <program> #asMapOpCodes(#dasmOpCodes(#parseByteStack("0x608060405234801561001057600080fd5b507c0100000000000000000000000000000000000000000000000000000000600035046336569e7781141561004b5760005460405260206040f35b63f4b9fa758114156100635760015460405260206040f35b63e5009bb6811415610119576100876b033b2e3c9fd0803ce80000006024356101d2565b7f78f1947000000000000000000000000000000000000000000000000000000000600052306004526004356024528060445260008060646000806000545af115156100d157600080fd5b7f9dc29fac000000000000000000000000000000000000000000000000000000006000523360045260243560245260008060446000806001545af1151561011757600080fd5b005b63ef693bed8114156101cd5761013d6b033b2e3c9fd0803ce80000006024356101d2565b7f78f194700000000000000000000000000000000000000000000000000000000060005233600452306024528060445260008060646000806000545af1151561018557600080fd5b7f40c10f19000000000000000000000000000000000000000000000000000000006000523360045260243560245260008060446000806001545af115156101cb57600080fd5b005b600080fd5b600082820290507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082111561020757600080fd5b82848304146000851417151561021c57600080fd5b50929150505600a165627a7a7230582020945abaed8cb4f5ac4924119d9c8e88892c8e1a7c8d4cfa572316898ef89c190029"), BYZANTIUM)) </program>
        <programBytes> #parseByteStack("0x608060405234801561001057600080fd5b507c0100000000000000000000000000000000000000000000000000000000600035046336569e7781141561004b5760005460405260206040f35b63f4b9fa758114156100635760015460405260206040f35b63e5009bb6811415610119576100876b033b2e3c9fd0803ce80000006024356101d2565b7f78f1947000000000000000000000000000000000000000000000000000000000600052306004526004356024528060445260008060646000806000545af115156100d157600080fd5b7f9dc29fac000000000000000000000000000000000000000000000000000000006000523360045260243560245260008060446000806001545af1151561011757600080fd5b005b63ef693bed8114156101cd5761013d6b033b2e3c9fd0803ce80000006024356101d2565b7f78f194700000000000000000000000000000000000000000000000000000000060005233600452306024528060445260008060646000806000545af1151561018557600080fd5b7f40c10f19000000000000000000000000000000000000000000000000000000006000523360045260243560245260008060446000806001545af115156101cb57600080fd5b005b600080fd5b600082820290507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082111561020757600080fd5b82848304146000851417151561021c57600080fd5b50929150505600a165627a7a7230582020945abaed8cb4f5ac4924119d9c8e88892c8e1a7c8d4cfa572316898ef89c190029") </programBytes>
        <id> ACCT_ID </id>
        <caller> CALLER_ID </caller>
        <callData> #abiCallData("vat", .TypedArgs) </callData>
        <callValue> 0 </callValue>
        <wordStack> .WordStack => _ </wordStack>
        <localMem> .Map => _ </localMem>
        <pc> 0 => _ </pc>
        <gas> VGas => _ </gas>
        <memoryUsed> 0 => _ </memoryUsed>
        <previousGas> _ => _ </previousGas>
        <static> false </static>
        <callDepth> VCallDepth => _ </callDepth>
      </callState>
      <substate>
        <selfDestruct> VSelfDestruct </selfDestruct>
        <log> _ => VLog </log>
        <refund> _ => VRefund </refund>
      </substate>
      <gasPrice> _ </gasPrice>
      <origin> ORIGIN_ID </origin>
      <previousHash> _ </previousHash>
      <ommersHash> _ </ommersHash>
      <coinbase> _ </coinbase>
      <stateRoot> _ </stateRoot>
      <transactionsRoot> _ </transactionsRoot>
      <receiptsRoot> _ </receiptsRoot>
      <logsBloom> _ </logsBloom>
      <difficulty> _ </difficulty>
      <number> _ </number>
      <gasLimit> _ </gasLimit>
      <gasUsed> _ </gasUsed>
      <timestamp> TIME </timestamp>
      <extraData> _ </extraData>
      <mixHash> _ </mixHash>
      <blockNonce> _ </blockNonce>
      <ommerBlockHeaders> _ </ommerBlockHeaders>
      <blockhash> _ </blockhash>
    </evm>
    <network>
      <activeAccounts> SetItem(ACCT_ID) _ </activeAccounts>
      <accounts>
        <account>
          <acctID> ACCT_ID </acctID>
          <balance> BAL </balance>
          <code> #parseByteStack("0x608060405234801561001057600080fd5b507c0100000000000000000000000000000000000000000000000000000000600035046336569e7781141561004b5760005460405260206040f35b63f4b9fa758114156100635760015460405260206040f35b63e5009bb6811415610119576100876b033b2e3c9fd0803ce80000006024356101d2565b7f78f1947000000000000000000000000000000000000000000000000000000000600052306004526004356024528060445260008060646000806000545af115156100d157600080fd5b7f9dc29fac000000000000000000000000000000000000000000000000000000006000523360045260243560245260008060446000806001545af1151561011757600080fd5b005b63ef693bed8114156101cd5761013d6b033b2e3c9fd0803ce80000006024356101d2565b7f78f194700000000000000000000000000000000000000000000000000000000060005233600452306024528060445260008060646000806000545af1151561018557600080fd5b7f40c10f19000000000000000000000000000000000000000000000000000000006000523360045260243560245260008060446000806001545af115156101cb57600080fd5b005b600080fd5b600082820290507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082111561020757600080fd5b82848304146000851417151561021c57600080fd5b50929150505600a165627a7a7230582020945abaed8cb4f5ac4924119d9c8e88892c8e1a7c8d4cfa572316898ef89c190029") </code>
          <storage> #DaiJoin.vat |-> (Vat)
                          _:Map
           </storage>
          <nonce> _ </nonce>
        </account>
       ... 
      </accounts>
      <txOrder> _ </txOrder>
      <txPending> _ </txPending>
      <messages> _ </messages>
    </network>
  </ethereum>
requires #rangeAddress(ACCT_ID)
andBool #notPrecompileAddress(ACCT_ID)
andBool #rangeAddress(CALLER_ID)
andBool #rangeAddress(ORIGIN_ID)
andBool #rangeUInt(48, TIME)
andBool #rangeUInt(256, BAL)
andBool VCallDepth <=Int 1024
  andBool #rangeAddress(Vat)
  andBool #notPrecompileAddress(Vat)
  andBool ACCT_ID =/=Int Vat
  andBool VGas >Int 300000

endmodule
